ender@orchid-continuum-1-shell:~/project/src$ import os
from openai import OpenAI

# Test the API key
try:
    client = OpenAI(api_key=os.getenv('OPENAI_API_KEY'))
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": "Say 'API key working!'"}],
        max_tokens=10
    )
    print(f"❌ API Key problem: {e}")ces[0].message.content}")
import-im6.q16: unable to open X server `' @ error/import.c/ImportImageCommand/346.
bash: from: command not found
bash: try:: command not found
bash: syntax error near unexpected token `('
bash: syntax error near unexpected token `('
bash: !': event not found
bash: syntax error near unexpected token `)'
bash: syntax error near unexpected token `"✅ API Key is working!"'
bash: syntax error near unexpected token `f"Response: {response.choices[0].message.content}"'
bash: except: command not found
bash: syntax error near unexpected token `f"❌ API Key problem: {e}"'
render@orchid-continuum-1-shell:~/project/src$ python3
Python 3.13.4 (main, Jun  4 2025, 14:54:08) [GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> echo 'import os
... from openai import OpenAI
... 
... try:
...     client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
...     response = client.chat.completions.create(
...         model="gpt-3.5-turbo",
...         messages=[{"role": "user", "content": "Say API key workin\
g!"}],
...         max_tokens=10
...     )
...     print("✅ API Key is working!")
...     print(f"Response: {response.choices[0].message.content}")
... except Exception as e:
...     print(f"❌ API Key problem: {e}")' > test_openai.py
... 
... python3 test_openai.py
... import os
... from openai import OpenAI
... 
... try:
...     client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
...     response = client.chat.completions.create(
...         model="gpt-3.5-turbo",
...         messages=[{"role": "user", "content": "Say API key workin\
g!"}],
...         max_tokens=10
...     )
...     print("✅ API Key is working!")
...     print(f"Response: {response.choices[0].message.content}")
... except Exception as e:
...     print(f"❌ API Key problem: {e}")